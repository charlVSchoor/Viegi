ggplot(aes(x = Year, y =SimpleInterest)) + geom_line()
df %>%
group_by(Year) %>%
ggplot(aes(x = as.factor(Year), y =CostPerMonth)) + geom_histogram()
df %>%
group_by(Year) %>%
ggplot(aes(x = Year, y =TotalAmount)) + geom_histogram()
df %>%
group_by(Year) %>%
ggplot(aes(x = Year, y =SimpleInterest)) + geom_histogram()
#insert option for monthly payments
#create dataframes as motnhs and years and so, then Il have a cleare way of understanindg the data. Get tidy data
#question to answer: at which point is it optimal to pay off this debt? is it 12,16,24, etc.?
} else if (yoy==T){
print("------------ Compound Interest      -----------------")
df <- data.frame(Months= numeric(0),
Year= numeric(0),
Rate= numeric(0),
CompoundInterest= numeric(0),
TotalAmount= numeric(0),
CostPerMonth= numeric(0))
i = 1
while (i <= years) {
print("Year on Year")
print(i)
print("------------ Interest Cost        -----------------")
CompoundInterest <- principal*((Rate+1)^i - 1)
print(CompoundInterest)
print("------------ Total Amount        ---------------------")
TotalAmount <- CompoundInterest + principal
print(TotalAmount)
print("------------ Cost Per Month      ---------------------")
CostMonth <- TotalAmount/yearInMonths
print(CostMonth)
print(paste0("--------------Year", i, "--------------"))
tempDf <- data.frame(Months = 1:12,
Year = rep(i,12),
Rate = rep(Rate,12),
CompoundInterest = rep(CompoundInterest,12),
TotalAmount = rep(TotalAmount, 12),
CostPerMonth = rep(CostMonth, 12))
df <- rbind(df, tempDf)
i = i + 1
}
final_df <- df
print(head(final_df))
pritn(unique(final_df$CostPerMonth))
}
}
interst_rates(principal = 100000, rate = 12, years = 4, simple=T, yoy=T)
install.packages("car")
library(car)
install.packages("wbstats")
install.packages("googleVis")
install.packages("WDI")
source("~/Desktop/R_utilities/libraries.R")
rm(list=ls())
OWN_STOP_WORDS = c("In", "cent", "4,5", "5,7", "r1290", "2,3", "1,6", "16,5", "93")
TOP_WORDS_TO_GRAPH = 6
NUM_TOPICS = 30
YEARS = 2013:2018
NUM_DOCUMENTS = 31
BANKS = c("SARB")
set.seed(1234)
setwd("~/Documents/GitHub/Viegi/src")
parent.dir = getwd()
foldersToCreate = c("data", "output", "data/input", "data/output",  "output/visualization", "output/visualization/pre","output/visualization/post")
foldersToClean = c("data/input", "data/output", "output/visualization/pre","output/visualization/post")
for (i in 1:length(foldersToCreate)){
dir.create(paste(parent.dir, foldersToCreate[i], sep = "/"))
}
for (folder in foldersToClean) {
files = list.files(path = folder)
for (file in files){
filePath = paste0(folder, file)
file.remove(filePath)
writeLines(paste0("Removed ",filePath))
}
}
foldersToClean = c("data/input/", "data/output/", "output/visualization/pre/","output/visualization/post/")
for (folder in foldersToClean) {
files = list.files(path = folder)
for (file in files){
filePath = paste0(folder, file)
file.remove(filePath)
writeLines(paste0("Removed ",filePath))
}
}
source("./1_dataProcessing.R")
source("./2_modelLDA.R")
source("./3_dataTransformation.R")
source("./4_prePostVisualisation.R")
source("./4_prePostVisualisation.R")
rm(list=ls())
OWN_STOP_WORDS = c("In", "cent", "4,5", "5,7", "r1290", "2,3", "1,6", "16,5", "93")
TOP_WORDS_TO_GRAPH = 6
NUM_TOPICS = 30
YEARS = 2013:2018
NUM_DOCUMENTS = 31
BANKS = c("SARB")
set.seed(1234)
setwd("~/Documents/GitHub/Viegi/src")
parent.dir = getwd()
foldersToCreate = c("data", "output", "data/input", "data/output",  "output/visualization", "output/visualization/pre","output/visualization/post")
foldersToClean = c("data/input/", "data/output/", "output/visualization/pre/","output/visualization/post/")
for (i in 1:length(foldersToCreate)){
dir.create(paste(parent.dir, foldersToCreate[i], sep = "/"))
}
for (folder in foldersToClean) {
files = list.files(path = folder)
for (file in files){
filePath = paste0(folder, file)
file.remove(filePath)
writeLines(paste0("Removed ",filePath))
}
}
source("./1_dataProcessing.R")
source("./2_modelLDA.R")
source("./3_dataTransformation.R")
source("./4_prePostVisualisation.R")
source("./4_prePostVisualisation.R")
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>% print
View(tidy_mpc_extract)
tidy_mpc_extract <- mpc_extract_clean %>%
unnest_tokens(word, mpc_communication, token = "words", to_lower = T) %>%
filter(!word %in% OWN_STOP_WORDS) %>%
filter(!word %in% stop_words$word)
View(tidy_mpc_extract)
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
ungroup() %>% print()
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
ungroup() %>%
arrange(nr, -prop) %>% print()
print(tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
ungroup() %>%
arrange(nr, -prop) %>% print(as.data.frame())
mutate(word = reorder(word, prop), nr = as.factor(nr)) %>%
ggplot() + geom_bar(aes(x = word, y = prop*100, fill = word), stat = "identity",  show.legend = FALSE) +
coord_flip() + facet_wrap(~ nr) + theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()))
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
ungroup() %>%
arrange(nr, -prop) %>% print()
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
ungroup() %>%
arrange(nr, -prop) %>% as.data.frame %>% print()
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count) %>%
ungroup() %>%
arrange(nr, -prop) %>% as.data.frame %>%
mutate(word = reorder(word, prop), nr = as.factor(nr)) %>%
ggplot() + geom_bar(aes(x = word, y = prop*100, fill = word), stat = "identity",  show.legend = FALSE) +
coord_flip() + facet_wrap(~ nr) + theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
ungroup() %>%
filter(prop > 0.5) %>%
filter(!(word %in% OWN_STOP_WORDS)) %>%
arrange(nr, -prop) %>%
mutate(word = reorder(word, prop), nr = as.factor(nr)) %>%
ggplot() + geom_bar(aes(x = word, y = prop*100, fill = word), stat = "identity",  show.legend = FALSE) +
coord_flip() + facet_wrap(~ nr)
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
ungroup() %>%
filter(count > 15) %>%
filter(!(word %in% OWN_STOP_WORDS)) %>%
arrange(nr, -prop) %>%
mutate(word = reorder(word, prop), nr = as.factor(nr)) %>%
ggplot() + geom_bar(aes(x = word, y = prop*100, fill = word), stat = "identity",  show.legend = FALSE) +
coord_flip() + facet_wrap(~ nr)
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
ungroup() %>%
filter(count > 10) %>%
filter(!(word %in% OWN_STOP_WORDS)) %>%
arrange(nr, -prop) %>%
mutate(word = reorder(word, prop), nr = as.factor(nr)) %>%
ggplot() + geom_bar(aes(x = word, y = prop*100, fill = word), stat = "identity",  show.legend = FALSE) +
coord_flip() + facet_wrap(~ nr)
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
ungroup() %>%
filter(prop > 0.005) %>%
filter(!(word %in% OWN_STOP_WORDS)) %>%
arrange(nr, -prop) %>%
mutate(word = reorder(word, prop), nr = as.factor(nr)) %>%
ggplot() + geom_bar(aes(x = word, y = prop*100, fill = word), stat = "identity",  show.legend = FALSE) +
coord_flip() + facet_wrap(~ nr)
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
ungroup() %>%
filter(prop > 0.01) %>%
filter(!(word %in% OWN_STOP_WORDS)) %>%
arrange(nr, -prop) %>%
mutate(word = reorder(word, prop), nr = as.factor(nr)) %>%
ggplot() + geom_bar(aes(x = word, y = prop*100, fill = word), stat = "identity",  show.legend = FALSE) +
coord_flip() + facet_wrap(~ nr)
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
filter(prop > 0.01) %>%
ungroup() %>%
filter(!(word %in% OWN_STOP_WORDS)) %>%
arrange(nr, -prop) %>%
mutate(word = reorder(word, prop), nr = as.factor(nr)) %>%
ggplot() + geom_bar(aes(x = word, y = prop*100, fill = word), stat = "identity",  show.legend = FALSE) +
coord_flip() + facet_wrap(~ nr)
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
filter(prop > 0.05) %>%
ungroup() %>%
filter(!(word %in% OWN_STOP_WORDS)) %>%
arrange(nr, -prop) %>%
mutate( nr = as.factor(nr)) %>%
ggplot() + geom_bar(aes(x = word, y = prop*100, fill = word), stat = "identity",  show.legend = FALSE) +
coord_flip() + facet_wrap(~ nr)
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
filter(prop > 0.05) %>%
ungroup() %>%
filter((!word %in% OWN_STOP_WORDS)) %>%
arrange(nr, -prop) %>%
mutate(word = reorder(word, prop), nr = as.factor(nr)) %>%
ggplot() + geom_bar(aes(x = word, y = prop*100, fill = word), stat = "identity",  show.legend = FALSE) +
coord_flip() + facet_wrap(~ nr)
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
filter(prop > 0.05) %>%
ungroup() %>%
arrange(nr, -prop) %>%
mutate(word = reorder(word, prop), nr = as.factor(nr)) %>%
ggplot() + geom_bar(aes(x = word, y = prop*100, fill = word), stat = "identity",  show.legend = FALSE) +
coord_flip() + facet_wrap(~ nr)
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
filter(prop > 0.05) %>%
ungroup() %>% print()
filter(!(word %in% OWN_STOP_WORDS)) %>%
arrange(nr, -prop) %>%
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
filter(prop > 0.05) %>%
ungroup() %>% print()
print(
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
filter(prop > 0.05) %>% print()
ungroup() %>% print()
filter(!(word %in% OWN_STOP_WORDS)) %>%
arrange(nr, -prop) %>%
mutate(word = reorder(word, prop), nr = as.factor(nr)) %>%
ggplot() + geom_bar(aes(x = word, y = prop*100, fill = word), stat = "identity",  show.legend = FALSE) +
coord_flip() + facet_wrap(~ nr)
)
idy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
filter(prop > 0.05) %>% print()
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
filter(prop > 0.05) %>% print()
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
filter(prop > 0.05) %>%
ungroup() %>%
filter(!(word %in% OWN_STOP_WORDS)) %>% print()
tidy_mpc_extract
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
filter(prop > 0.05) %>%
ungroup() %>%
filter(!(word %in% OWN_STOP_WORDS)) %>%
arrange(nr, -prop) %>% print()
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
filter(prop > 0.05) %>%
ungroup() %>%
filter(!(word %in% OWN_STOP_WORDS)) %>%
arrange(nr, -prop) %>%
mutate(word = reorder(word, prop), nr = as.factor(nr)) %>% print()
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
filter(prop > 0.05) %>%
ungroup() %>%
filter(!(word %in% OWN_STOP_WORDS)) %>%
arrange(nr, -prop) %>%
mutate(word = reorder(word, prop), nr = as.factor(nr)) %>% print()
ggplot() + geom_bar(aes(x = word, y = prop*100, fill = word), stat = "identity",  show.legend = FALSE) +
coord_flip() + facet_wrap(~ nr)
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
filter(prop > 0.05) %>%
ungroup() %>%
filter(!(word %in% OWN_STOP_WORDS)) %>%
arrange(nr, -prop) %>%
mutate(word = reorder(word, prop), nr = as.factor(nr)) %>%
ggplot() + geom_bar(aes(x = word, y = prop*100, fill = word), stat = "identity",  show.legend = FALSE) +
coord_flip() + facet_wrap(~ nr)
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
ungroup() %>%
filter(prop > 0.005) %>%
filter(!(word %in% OWN_STOP_WORDS)) %>%
arrange(nr, -prop) %>%
mutate(word = reorder(word, prop), nr = as.factor(nr)) %>%
ggplot() + geom_bar(aes(x = word, y = prop*100, fill = word), stat = "identity",  show.legend = FALSE) +
coord_flip() + facet_wrap(~ nr)
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
ungroup() %>%
filter(prop > 0.005) %>%
filter(!(word %in% OWN_STOP_WORDS)) %>% print()
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
ungroup() %>%
filter(prop > 0.005) %>%
filter(!(word %in% OWN_STOP_WORDS)) %>%
arrange(nr, -prop) %>% print()
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
ungroup() %>%
filter(prop > 0.005) %>%
filter(!(word %in% OWN_STOP_WORDS)) %>%
arrange(nr, -prop) %>% print()
mutate(nr = as.factor(nr)) %>%
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
ungroup() %>%
filter(prop > 0.005) %>%
filter(!(word %in% OWN_STOP_WORDS)) %>%
arrange(nr, -prop) %>%
mutate(nr = as.factor(nr)) %>% print()
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
ungroup() %>%
filter(prop > 0.005) %>%
filter(!(word %in% OWN_STOP_WORDS)) %>%
arrange(nr, -prop) %>%
mutate(nr = as.factor(nr)) %>% print()
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
ungroup() %>%
filter(prop > 0.005) %>%
filter(!(word %in% OWN_STOP_WORDS)) %>%
arrange(nr, -prop) %>%
mutate(nr = as.factor(nr)) %>% print()
ggplot() + geom_bar(aes(x = word, y = prop*100, fill = word), stat = "identity",  show.legend = FALSE) +
coord_flip() + facet_wrap(~ nr)
print(tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
ungroup() %>%
filter(prop > 0.005) %>%
filter(!(word %in% OWN_STOP_WORDS)) %>%
arrange(nr, -prop) %>%
mutate(nr = as.factor(nr)) %>% print()
ggplot() + geom_bar(aes(x = word, y = prop*100, fill = word), stat = "identity",  show.legend = FALSE) +
coord_flip() + facet_wrap(~ nr)
)
tidy_mpc_extract %>%
group_by(word, nr) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(nr) %>%
mutate(prop = count/sum(count)) %>%
ungroup() %>%
filter(prop > 0.005) %>%
filter(!(word %in% OWN_STOP_WORDS)) %>%
arrange(nr, -prop) %>%
mutate(nr = as.factor(nr)) %>%
ggplot() + geom_bar(aes(x = word, y = prop*100, fill = word), stat = "identity",  show.legend = FALSE) +
coord_flip() + facet_wrap(~ nr)
